<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
           http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
           http://www.springframework.org/schema/tx 
           http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
           http://www.springframework.org/schema/jdbc 
           http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
           http://www.springframework.org/schema/aop 
           http://www.springframework.org/schema/aop/spring-aop-3.2.xsd">
           
    <tx:annotation-driven transaction-manager="transactionManagerNci"/>

	<bean id="sqlSessionAppNci" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSourceNci" />
<!-- 		<property name="mapperLocations" value="classpath:mybatis/mappers/*.xml" /> -->
		<property name="configLocation" value="classpath:mybatis/config/mybatis-config.xml" />
	</bean>
	
	<!-- this alias is used to be injected into AbstractMyBatisAppRepository because it uses this name sqlSessionApp-->
	<alias name="sqlSessionAppNci" alias="sqlSessionApp" />
	
  <!-- scan for mappers and let them be autowired -->
  <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
    <property name="basePackage" value="mx.profuturo.nci.persistence" />
    <property name="annotationClass" value="mx.profuturo.nci.stereotype.Mapper" />
  </bean>
  
	<bean id="transactionManagerNci"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSourceNci" />
	</bean>
	
	<!-- sql manager for queries -->
<!-- 	<bean id="dataSourceSqlManager" class="com.jeveris.core.persistence.aop.DataSourceAround"> -->
<!-- 		<property name="connectionWrapper" ref="connectionSqlManager" /> -->
<!-- 	</bean> -->

<!-- 	<bean id="connectionSqlManager" -->
<!-- 		class="com.jeveris.core.persistence.aop.jdbc.ConnectionSqlManager"> -->
<!-- 		<property name="formatSql" value="false" /> -->
		<!-- default sqlManagerFactory, it can be overriden if necessary -->
<!-- 		<property name="sqlManagerFactory" ref="sqlAuditAndStatsManagerFactory" /> -->
<!-- 	</bean> -->

	<!-- Poincut to apply transactionality to all repository operations -->
<!-- 	<aop:config> -->
<!-- 		<aop:pointcut id="repositoryOperation" expression="bean(*Repository*)" /> -->
<!-- 		<aop:advisor pointcut-ref="repositoryOperation" -->
<!-- 			advice-ref="txAdvice" /> -->
<!-- 	</aop:config> -->

	<!-- Advice to define transactionality for each kind of repository operation -->
<!-- 	<tx:advice id="txAdvice" transaction-manager="transactionManagerNci"> -->
<!-- 		<tx:attributes> -->
<!-- 			<tx:method name="*" /> all methods are intercepted	 -->
<!-- 		</tx:attributes> -->
<!-- 	</tx:advice> -->

</beans>